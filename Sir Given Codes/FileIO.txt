/* File Operations :
	Read : Read Content from a file
	Write: Write content into the file
	Empty : Clear the contents of the file




	File Object : FIle Pointer -> WHich contains a "entry point" or a "HANDLE"
		      to the file. For everything we do to this file, we will 
		      use this FIle Pointer, to write to the file name

	File Name : Full path of the file where it has to be created. 
		    Windows : Drive:\Path, ex: C:\MyData\test.txt

		    Linux(Linux like) /MountPoint/Path ex: /home/myfile.txt...
					

	Open the File : Intention has to be clear -> Write, Read, Append, Binary
			w(RITE) -> If the file doesn't exist it is created
	Here we will create a simple class that will Perform all the above 

*/	

#include <iostream>
#include <fstream>
#include <string>
#include <vector>

class Fileops 
{
	private:
		std::string filename;
	public:
		Fileops(const std::string& name):filename(name) {}

		void writeToFile(const std::vector<std::string>& lines) 
		{
			//This opens in append mode		
			std::ofstream outfile(filename,std::ios::app);
			if(!outfile) 
			{
				std::cerr << "Error: Can not open the file for writing.\n";
				return;
			}

			for (const auto& line:lines) 
			{ 
				outfile << line << \n";
			}

			outfile.close();
			std::cout << "Data was written to the file. \n";
		}


		void readFromFile() 
		{
			std::ifstream infile(filename);
			if(!infile) 
			{
				std::cerr << "Error:Can not open file for reading.\n";
			}
		
			std::string line;
			std::cout << "Content in the file:\n";
			while (std::getline(infile,line)) 
			{
				std::cout << line << "\n";
			}
			infile.close();
			
		}


		void emptyFile()
		{

			//Open the file in truncate mode
			std::ofstream outfile(filename,std::ios::trunc);
			if (!outfile) 
			{
			  std::cerr << "Error: WHere is the file that has to be cleared ?");
			}
			outfile.close();

			std::cout << "File contents cleared !.\n";
		}

};

// Main  or Driver function to test the file io class 

int main() 
{
	Fileops file("myfile.txt");
	
	std::vector<std::string> data = "{"This will go into a file","Apples are red and round","File opened, read, written and closed", "Now it will be cleared" };

	//Write the data to the file;
	file.writeToFile(data);

	//Read fromt the file.
	file.readFromFile();

	//Clear the file of all data
	file.emptyFile();


	//Read again to confirm it is empty.
	file.readFromFile();

	return 0;
}




